# R code that create network graph of historical transactions related to a given public key.

library(Rbitcoin)
library(igraph)


example1 <- '1J4yuJFqozxLWTvnExR4Xxe9W4B89kaukY' #37 for ID6

example2 <- '17NKcZNXqAbxWsTwB1UJHjc9mQG3yjGALA' #48 for ID6

example3 <- '18XSLnBZ8ydMUkaifU6sQBMJzmm7JvDeUp' #49 for ID6
list <- c(example1, example2, example3)

for (i in 1:length(list)) {
  name <- c('public key1','public key2', 'public key3')
  wallet <- blockchain.api.process(list[i])
  seed <- list[i]
  singleaddress <- blockchain.api.query(method = 'Single Address', bitcoin_address = seed, limit=100)
  txs <- singleaddress$txs
  
  bc <- data.frame()
  for (t in txs) {
    hash <- t$hash
    for (inputs in t$inputs) {
      from <- inputs$prev_out$addr
      for (out in t$out) {
        to <- out$addr
        va <- out$value
        bc <- rbind(bc, data.frame(from=from,to=to,value=va, stringsAsFactors=F))
      }
    }
  }

  btc <- ddply(bc, c("from", "to"), summarize, value=sum(value))
  
  btc.net <- graph.data.frame(btc, directed=T)
  V(btc.net)$color <- "blue"
  V(btc.net)$color[unlist(V(btc.net)$name) == seed] <- "red"
  nodes <- unlist(V(btc.net)$name)
  E(btc.net)$width <- log(E(btc.net)$value)/10
  plot.igraph(btc.net, vertex.size=5, edge.arrow.size=0.1, vertex.label=NA, main=paste("Bitcoin transaction network - ",name[i]))
  
}
